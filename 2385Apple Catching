package com.company;
import java.io.BufferedInputStream;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        // write your code here
        int W, T;
        Scanner sc = new Scanner(new BufferedInputStream(System.in));
        T = sc.nextInt();
        W = sc.nextInt();
        int[] arr = new int[T + 1];
        int[][][] val = new int[T + 1][W + 1][2];

        for (int i = 1; i < T + 1; i++) {
            arr[i] = sc.nextInt();
        }
        val[0][0][0] = 1;
        val[0][0][1] = 0;
        int cnt = 1;
        for (int i = 0; i < T; i++) {
            for (int j = 0; j <= cnt; j++) {
                if (val[i][j][0] == arr[i + 1]) {
                    //在树下 肯定不变位置 免费多拿一个苹果 val[][][0]用来放树的位置 [1]用来放值
                    if (val[i + 1][j][1] < val[i][j][1] + 1) {
                        val[i + 1][j][0] = val[i][j][0];
                        val[i + 1][j][1] = val[i][j][1] + 1;
                    }
                }
                else {
                    //不在树下 此时要考虑不变和变
                    if (val[i + 1][j][1] <= val[i][j][1]) {
                        //不变 这里需要等于号
                        val[i + 1][j][0] = val[i][j][0];
                        val[i + 1][j][1] = val[i][j][1];
                    }
                    if (j + 1 <= W)
                        //变 这里不能有等于号
                        if (val[i + 1][j + 1][1] < val[i][j][1] + 1) {

                            val[i + 1][j + 1][0] = arr[i + 1];
                            val[i + 1][j + 1][1] = val[i][j][1] + 1;
                        }
                }
            }
            if (cnt < W)
                cnt++;
        }
//        for (int i = 0; i < T + 1; i++) {
//            for (int j = 0; j <= W ; j++) {
//                for (int k = 0; k < 2; k++) {
//                    System.out.print(val[i][j][k] + " ");
//                }
//                System.out.print("   ");
//            }
//            System.out.println();
//        }
        System.out.println(val[T][W][1]);
    }
}
