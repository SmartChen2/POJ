package com.company;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        Reader.init( System.in );
        int N = Reader.nextInt(), C = Reader.nextInt();
        int[][] arr = new int[N][2];
        int totalnum = 0;
        long ans = 0;
        for (int i = 0; i < N; i++) {
            arr[i][0] = Reader.nextInt();
            arr[i][1] = Reader.nextInt();
            totalnum += arr[i][1];
        }
        Arrays.sort(arr, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return o1[0] - o2[0];
            }
        });

        for (int i = N - 1; i >= 0; i--) {
            if (arr[i][0] >= C) {
                ans += arr[i][1];
                totalnum -= arr[i][1];
                N--;
            }
            else
                break;
        }

        while (totalnum > 0 && N >= 1) {
            int gap = C;
            int i = N - 1;
            while (gap > 0 && totalnum > 0 && i >= 0 ) {
                if (gap - arr[i][0] >= 0 && arr[i][1] > 0) {
                    gap -= arr[i][0];
                    arr[i][1]--;
                    totalnum--;
                }
                else
                    i--;
                if (arr[N - 1][1] == 0)
                    for (int j = N - 1; j >= 0; j--) {
                        if (arr[j][1] > 0) {
                            N = j + 1;
                            break;
                        }
                    }
            }
            if (i < 0)
                i = 0;
            while (gap > 0 && totalnum > 0 && i < N) {
                if (arr[i][1] > 0) {
                    gap -= arr[i][0];
                    arr[i][1]--;
                    totalnum--;
                }
                else
                    i++;
            }
            if (gap <= 0)
                ans++;
        }
        System.out.println(ans);
    }
}


class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }
    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            //TODO add check for eof if necessary
            tokenizer = new StringTokenizer(
                    reader.readLine() );
        }
        return tokenizer.nextToken();
    }
    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
}
