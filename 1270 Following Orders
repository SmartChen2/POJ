#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <sstream>
using namespace std;
const int MAXN = 27;
int map[MAXN][MAXN], indegree[MAXN], arr[MAXN];
int N;

void dfstopo(int layer) {
	if (layer == N) {
		for (int i = 0; i < N; i++) printf("%c", arr[i] + 'a');
		printf("\n");
		return ;
	}
	for (int i = 0, cnt = 0; i < MAXN; i++) {
		if (indegree[i] == 0) {
			indegree[i]--;
			arr[layer] = i;
			for (int j = 0; j < MAXN; j++)
				if (map[i][j]) 
					indegree[j]--;
					
			dfstopo(layer + 1);
			
			indegree[i]++;
			arr[layer] = 0;
			for (int j = 0; j < MAXN; j++)
				if (map[i][j]) 
					indegree[j]++;
		}
	}
}
int main()
{
	string st;
	while (getline(cin, st)) {
		N = 0;
		fill(indegree, indegree + MAXN, -1);
		fill(map[0], map[0] + MAXN * MAXN, 0);
		stringstream stm(st);
		char a, b;
		while (stm >> a) {
			indegree[a - 'a'] = 0;
			N++;
		}  
		getline(cin, st);
		stringstream s(st);
		while (s >> a >> b) {
			int x = a - 'a';
			int y = b - 'a';
			indegree[y]++;
			map[x][y] = 1;
		}
		dfstopo(0);
		printf("\n");
	}
	return 0;
}
