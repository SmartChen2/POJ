#include <iostream>
#include <stdio.h>

#define MAX 1050000
#define PLEN 100000
using namespace std;

bool isprime[MAX];
int prime[PLEN];
int i, j, X;

int main()
{
	//prime
	fill(isprime, isprime + MAX, true);
	isprime[0] = false;
	isprime[1] = false;
	
	int sum = 0;
	for (i = 2; i < MAX; i++) {
		if(isprime[i]) {
			prime[sum++] = i;
			for (j = i + i; j < MAX; j += i)
				isprime[j] = false;
		}
	}
	
	while (scanf("%d", &X) == 1) {
		if (isprime[X]) {
			printf("1 1\n");
			continue;
		}
			
		int index = 0;
		long long A = 1;
		int ans = 0;
		//decomposite prime factors
		{
			while (X > 1) {
				int mod = prime[index++];
				int cnt = 1;
				while (X % mod == 0 && X != 0) {
					ans++;
					X /= mod;
					A *= cnt++;
				}
			}
		}
		//pow, permutation and combination
		long long pow = 1;
		for (j = 2; j <= ans; j++){
			pow *= j;
		}
		pow /= A;
		printf("%d %lld\n", ans, pow);
	}
    return 0;
}
