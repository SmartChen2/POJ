#include <stdio.h>
#include <iostream>
#include <algorithm>
typedef long long lll;
#define MAXN 100001
int arr[MAXN];
using namespace std;
int i, j, N, K, l, r, mid;

//find the minimal value of t that satisfies K * t + (tt - t) * 1 >= arr[i]
//t mins were used by drying machine, tt - t mins were used to drying automatically.
//tt - t must >= than the consumed time
int findmin(lll w, lll tt) {
	lll rr = tt;
	rr = (w - tt) / (K - 1);
	if (K * rr + (tt - rr) < w)
		rr++;
	if (K * rr + (tt - rr) < w || rr > tt)
		return -1;
	return rr;
}
bool c(int m) {
	int t = m, tdt = 0;
	for (j = N - 1; j >= 0; j--) {
		if (arr[j] <= m)
			break;
		int w = arr[j] - tdt;
		int cost = findmin(w, t);
		t -= cost;
		tdt += cost;
		if (cost == -1 || t < 0)
			return false;
	}
	return t >= 0;
}
int main() {
	int maxx = 0;
	while (scanf("%d", &N) == 1) {
		for (i = 0; i < N; i++) {
			scanf("%d", &arr[i]);
			maxx = max(maxx, arr[i]);
		}
		l = -1, r = maxx;
		scanf("%d", &K);
		if (K == 1) {
			printf("%d\n", maxx);
			continue;
		}
		sort(arr, arr + N);
		while (l < r - 1) {
			mid = (l + r) / 2;
			if(c(mid)) 
				r = mid;
			else
				l = mid;
		}
		printf("%d\n", r);
	}
	return 0;
}
