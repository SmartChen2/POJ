package com.company;
import java.io.BufferedInputStream;
import java.util.Arrays;
import java.util.Scanner;


public class Main {

    public static void main(String[] args) {
        // write your code here
        int N, d, Case;
        Case = 0;
        Scanner sc = new Scanner(new BufferedInputStream(System.in));
        N = sc.nextInt();
        d = sc.nextInt();

        while (N != 0 || d != 0) {
            boolean flag = true;
            int radarcnt = 0;
            int resortcnt = 0;

            pos[] posarr = new pos[N];

            for (int i = 0; i < N; i++) {
                posarr[i] = new pos();
                posarr[i].x = sc.nextInt();
                posarr[i].y = sc.nextInt();

                if (posarr[i].y > d){
                    //只在这里判出ERR
                    flag = false;
                }
                else
                    posarr[i].ox = Math.sqrt(d * d - posarr[i].y * posarr[i].y) + posarr[i].x;
            }

            Arrays.sort(posarr);
            if (flag) {

                double p = posarr[0].ox;
                while (resortcnt < N) {
                    resortcnt++;
                    if (resortcnt >= N)
                        break;
                    //the centre of the new circle is on the left side of the old one.
                    if ((posarr[resortcnt].x - p) * (posarr[resortcnt].x - p) + posarr[resortcnt].y * posarr[resortcnt].y <= d * d) {

                    }
                    else {
                        radarcnt++;
                        p = posarr[resortcnt].ox;
                    }
                    //right answer output
                }
                Case++;
                System.out.println("Case " + Case + ": " + (radarcnt + 1));
            }
            else {
                Case++;
                System.out.println("Case " + Case + ": " + -1);
            }
            N = sc.nextInt();
            d = sc.nextInt();
        }
    }
}

class pos implements Comparable
{
    int x, y;
    double ox;

    public int compareTo(Object obj)
    {
        pos o = (pos)obj;
        if(this.ox<o.ox)
            return -1;
        else if(o.ox < this.ox)
            return 1;
        return 0;
    }
}
