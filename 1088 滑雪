package com.company;

import java.io.BufferedInputStream;
import java.util.Scanner;

public class Main {
    static int R, C, max;
    static int[][] d;

    public static void main(String[] args) {
        Scanner sc = new Scanner(new BufferedInputStream(System.in));
        R = sc.nextInt();
        C = sc.nextInt();

        int[][] map = new int[R][C];
        d = new int[][]{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};
        int x = 0, y = 0;
        max = 0;
        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
                map[i][j] = sc.nextInt();
                if (max < map[i][j]){
                    max = map[i][j];
                    x = i;
                    y = j;
                }
            }
        }

        max = 1;
        int[][] valmap = new int[R][C];
        valmap[x][y] = 1;

        DFS(valmap, map, x, y);
        System.out.println(max);
    }

    public static void DFS(int[][] valmap, int[][] map, int x, int y) {
        for (int k = 0; k < 4; k++) {
            int xx = x + d[k][0];
            int yy = y + d[k][1];

            if (xx >= 0 && yy >= 0 && xx < R && yy < C) {

                if (map[xx][yy] >= map[x][y]) continue;
                if (valmap[x][y] + 1 > valmap[xx][yy])
                    valmap[xx][yy] = valmap[x][y] + 1;
                max = Math.max(valmap[xx][yy], max);

                DFS(valmap, map, xx, yy);
            }
        }
    }
}
//        the program creates wrong answer in the followed case:
//        1 6 5 7
//        3 2 11 10
//        4 9 8 6
