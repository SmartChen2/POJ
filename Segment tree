#include <cstdio>
#include <iostream>
#include <algorithm>
#include <climits>
using namespace std;

const int MAXN = 1 << 17;
int n, dat[2 * MAXN - 1];

void init(int n_) {
	n = 1;
	while (n < n_) n *= 2;
	for (int i = 0; i < 2 * n - 1; i++)
		dat[i] = INT_MAX;
}

void update(int k, int a){
	k += n - 1;
	dat[k] = a;
	while (k > 0) {
		k = (k - 1)/2;
		dat[k] = min(dat[k * 2 + 1], dat[k * 2 + 2]);
	}
}
//求 [a, b)区间最小值， k表示节点的编号，l, r表示这个节点在[l, r)区间 
int query(int a, int b, int k, int l, int r) {
	//如果区间ab和lr完全不相交 
	if (r <= a || b <= l) return INT_MAX;
	//如果区间ab和lr完全相交 
	if (a <= l && r <= b) return dat[k];
	int chl = k * 2 + 1;
	int chr = chl + 1;
	//查询两个儿子 
	int vl = query(a, b, chl, l, (l + r)/2);
	int vr = query(a, b, chr, (l + r)/2, r);
	return min(vl, vr);
}

void display() {
	printf("\n");
	for (int i = 0; i < 2 * n - 1; i++)
		printf("%d ", dat[i]);
	printf("\n");
}
int main() {
	init(8);
//	display();
	update(0, 5);
	display();
	update(1, 3);
	display();
	update(4, 9);
	display();
	printf("\n%d\n", query(0, n, 0, 0, n));
	printf("\n%d\n", query(1, n, 0, 0, n));
	printf("\n%d\n", query(2, n, 0, 0, n));
	printf("\n%d\n", query(5, n, 0, 0, n));
	return 0;
}
