package com.company;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        Reader.init( System.in );
        int t = Reader.nextInt();

        while (t-- > 0) {
            int n = Reader.nextInt();
            int[] arr = new int[n];
            int[] dp1 = new int[n + 2];
            int[] dp2 = new int[n + 2];
            for (int i = 0; i < n; i++) {
                arr[i] = Reader.nextInt();
            }
            dp1[1] = arr[0];
            dp1[n + 1] = Integer.MIN_VALUE + 10000;
            for (int i = 1; i < n; i++) {
                dp1[i + 1] = Math.max(dp1[i], 0) + arr[i];
            }

            dp2[n] = arr[n - 1];
            dp2[0] = Integer.MIN_VALUE + 10000;
            for (int i = n - 2; i >= 0; i--) {
                dp2[i + 1] = Math.max(dp2[i + 2], 0) + arr[i];
            }


            for (int i = 1; i < n; i++) {
                dp1[i + 1] = Math.max(dp1[i + 1], dp1[i]);
            }
            for (int i = n - 2; i >= 0; i--) {
                dp2[i] = Math.max(dp2[i + 1], dp2[i]);
            }
            int ans = Integer.MIN_VALUE;
            for (int i = 1; i < n; i++) {
                ans = Math.max(ans, dp1[i] + dp2[i + 1]);
            }
            System.out.println(ans);
        }
    }
}
class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            //TODO add check for eof if necessary
            tokenizer = new StringTokenizer(
                    reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
}
