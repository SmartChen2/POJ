#include<stdio.h>
#include<string.h>
#include <algorithm>
using namespace std;
const int si = 107;
int map[si][si], indegree[si], arr[si];
int cnt = 0;
void Topo(int N) {
	for (int i = 1, pos, num; i <= N; i++) {
		pos = 0; num = 0;
		for (int j = 1; j <= N; j++) {
			if (indegree[j] == 0) {
				pos = j;
				num++;
			}
		}
		if (num == 0) return;
		arr[cnt++] = pos;
		indegree[pos] = -1;
		for (int j = 1; j <= N; j++) {//pos所指向的节点 也就是pos的子节点
			if (map[pos][j]) indegree[j]--;
		}
	}
}
int main()
{
	int N;
	scanf("%d", &N);
	for (int i = 1, b; i <= N; i++) {
		while (1) {
			scanf("%d", &b);
			if (b == 0) break;
   			map[i][b] = 1;
			indegree[b]++;
		}
	}
	Topo(N);
	for (int i = 0; i < cnt; i++) printf("%d ", arr[i]);
  return 0;
}
