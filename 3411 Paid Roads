#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <cmath>
using namespace std;
const int MAXN = 12;
const int INF = 150000000;
int n, m, ans = INF;
int a[MAXN], b[MAXN],c[MAXN],p[MAXN],r[MAXN];
int vis[MAXN];

void dfs (int pos, int cost) {
	if (pos == n - 1) {
		ans = min(ans, cost);
		return;
	}
	for (int i = 0; i < m; i++) {
		if(pos != a[i] || vis[b[i]] > 4) continue;
		vis[b[i]]++;
		if (vis[c[i]]) dfs(b[i], cost + p[i]);
		else dfs(b[i], cost + r[i]);
		vis[b[i]]--;
	}
}
int main() {
	scanf("%d %d", &n, & m);
	for (int i = 0; i < m; i++)  {
		scanf("%d%d%d%d%d", &a[i], &b[i], &c[i], &p[i], &r[i]);
 		a[i]--; b[i]--; c[i]--;
	}
	vis[0] = 1;
	dfs(0, 0);
	if (ans != INF)	printf("%d\n", ans);
	else printf("impossible\n");
	return 0;
}
