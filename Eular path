#include <cstdio>
#include <algorithm>
#include <iostream>
#include <queue>
#include <vector>
using namespace std;

const int SIZE = 1000;
int map[SIZE][SIZE];
bool vis[SIZE];
int cnt[SIZE];
int N, M, ans = 0, start = 0;

void dfs(int s) {
	vis[s] = 1;
	for (int i = 0; i < N; i++) {
		if (map[s][i] <= 0 || vis[i]) continue;
		dfs(i);
	}
}

int main() {
	cin >> N >> M;
	
	fill(map[0], map[0] + N * N, 0);
	fill(cnt, cnt + N, 0);
	fill(vis, vis + N, 0);
	for (int i = 0; i < M; i++) {
		int a, b;
		scanf("%d %d", &a, &b);
		a--; b--;
		map[a][b] = map[b][a] = 1;
		cnt[a]++; cnt[b]++;
	}

	dfs(0);
	for (int i = 0; i < N; i++) {
		if (cnt[i] % 2 || !vis[i]) {
			printf("0\n");
			return 0;
		}
	}

	printf("%d\n", 1);
	return 0;
}
