package com.company;

import java.io.BufferedInputStream;
import java.util.Scanner;

public class Main {
    static int R, C, max;
    static int[][] d;


    public static void main(String[] args) {
        Scanner sc = new Scanner(new BufferedInputStream(System.in));
        R = sc.nextInt();
        C = sc.nextInt();

        int[][] map = new int[R][C];
        d = new int[][]{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};

        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
                map[i][j] = sc.nextInt();

            }
        }
        int[][] dp = new int[R][C];


        max = 1;
        int ans = 1;

        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
            // in this way to deal with case
                max = 1;
                DFS(1, map, dp, i, j);
                dp[i][j] = max;
                ans = Math.max(ans, max);
            }
        }

        System.out.println(ans);

    }

    public static void DFS(int val, int[][] map, int[][] dp, int x, int y) {

        for (int k = 0; k < 4; k++) {
            int xx = x + d[k][0];
            int yy = y + d[k][1];

            if (xx >= 0 && yy >= 0 && xx < R && yy < C) {

                if (map[xx][yy] >= map[x][y]) continue;
                if (dp[xx][yy] != 0) {
                    max = Math.max(val + dp[xx][yy], max);
                    continue;
                }
                max = Math.max(val + 1, max);

                DFS(val + 1, map, dp, xx, yy);
            }
        }
    }
}
// in this way to deal with the case
//        3 4
//        1 6 5 7
//        3 2 11 10
//        4 9 8 6
